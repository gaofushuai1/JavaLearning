垃圾回收的分代收集理论 
	几种垃圾回收算法
		1、标记-清除算法
			这个算法分两个阶段，分别是标记阶段和清除阶段。首先标记出所需要回收的对象，再对标记的对象进行一个清除。这里的清除是指将要清除的内存标记为空闲区，下次使用的时候选择合适的空闲区进行覆盖。这个算法会导致内存空间碎片，优点是执行速度快。
		2、标记-整理算法
			标记过程和标记-清除算法的过程一样，在整理部分会将所有存活的对象都移动到一起。这样就不会产生内存碎片，但是执行速度很慢。
		3、标记-复制算法
			这个算法将内存分为两个区域FROM和TO（TO区域总是指执行算法后空闲的那一部分）。在FROM区域标记完对象以后，将存活的对象复制到TO的连续区域，清除FROM区域，然后再将FROM和TO所指对象交换。这个算法不会产生内存碎片，执行速度也不慢，但是需要双倍的内存空间。
	分代收集理论
		1、收集器将JAVA堆划分成两个区域，分别是新生代和老年代。新生代有分为伊甸园和幸存区FROM和幸存区TO两个区域。
		2、当新生代内存不足时，触发新生代垃圾回收(Minor GC)，通过标记-复制算法将所有伊甸园区和幸存区FROM区中幸存对象复制到幸存区TO区域并将每个对象的年龄加1（伊甸园中为0），清除FROM和伊甸园区，交换FROM和TO的对象（每次执行完TO区域都是空的）。当执行多次以后在FROM区中会存在存活时间比较久的对象（年纪大于设置的值），将这些对象放入老年代，当老年代满时触发full GC。
		3、minor GC和full GC会触发stop the world，会暂停所有其他用户线程，当垃圾回收线程执行结束后，用户线程恢复。